{"ast":null,"code":"var _class;\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class ApiManagementService {\n  constructor(http) {\n    this.http = http;\n    this.AllEmployeeData = [];\n    this.baseUrl = \"http://localhost:3000/api/\";\n  }\n  ngOnInit() {\n    this.getAllEmployee();\n  }\n  insertEmployee(data) {\n    return this.http.post(this.baseUrl + 'employee', data);\n  }\n  getAllEmployee() {\n    this.http.get(this.baseUrl + 'employee').subscribe(response => {\n      this.AllEmployeeData = response.detail;\n    });\n  }\n  getEmployeeById(data) {\n    return this.http.get(this.baseUrl + 'employee/' + data);\n  }\n  updateEmployee(id, data) {\n    return this.http.put(this.baseUrl + 'employee/' + id, data);\n  }\n}\n_class = ApiManagementService;\n_class.ɵfac = function ApiManagementService_Factory(t) {\n  return new (t || _class)(i0.ɵɵinject(i1.HttpClient));\n};\n_class.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: _class,\n  factory: _class.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"names":["ApiManagementService","constructor","http","AllEmployeeData","baseUrl","ngOnInit","getAllEmployee","insertEmployee","data","post","get","subscribe","response","detail","getEmployeeById","updateEmployee","id","put","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["E:\\node Dhruvesh\\mysra\\frontend\\src\\app\\Service\\api-management.service.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ApiManagementService {\n\n  AllEmployeeData : any[] = []\n\n  baseUrl:string = \"http://localhost:3000/api/\"\n\n  constructor(private http : HttpClient) { }\n\n  ngOnInit():void{\n    this.getAllEmployee()\n  }\n\n\n\n  insertEmployee(data:any):Observable<any>{\n    return this.http.post(this.baseUrl + 'employee',data)\n  }\n\n\n  getAllEmployee(){\n    this.http.get(this.baseUrl + 'employee').subscribe((response:any)=>{\n      this.AllEmployeeData = response.detail\n      \n    })\n  }\n\n\n  getEmployeeById(data:any):Observable<any>{\n    return this.http.get(this.baseUrl+'employee/'+data)\n  }\n\n\n  updateEmployee(id:any,data:any):Observable<any>{\n    return this.http.put(this.baseUrl+'employee/'+id,data)\n  }\n}\n"],"mappings":";;;AAOA,OAAM,MAAOA,oBAAoB;EAM/BC,YAAoBC,IAAiB;IAAjB,KAAAA,IAAI,GAAJA,IAAI;IAJxB,KAAAC,eAAe,GAAW,EAAE;IAE5B,KAAAC,OAAO,GAAU,4BAA4B;EAEJ;EAEzCC,QAAQA,CAAA;IACN,IAAI,CAACC,cAAc,EAAE;EACvB;EAIAC,cAAcA,CAACC,IAAQ;IACrB,OAAO,IAAI,CAACN,IAAI,CAACO,IAAI,CAAC,IAAI,CAACL,OAAO,GAAG,UAAU,EAACI,IAAI,CAAC;EACvD;EAGAF,cAAcA,CAAA;IACZ,IAAI,CAACJ,IAAI,CAACQ,GAAG,CAAC,IAAI,CAACN,OAAO,GAAG,UAAU,CAAC,CAACO,SAAS,CAAEC,QAAY,IAAG;MACjE,IAAI,CAACT,eAAe,GAAGS,QAAQ,CAACC,MAAM;IAExC,CAAC,CAAC;EACJ;EAGAC,eAAeA,CAACN,IAAQ;IACtB,OAAO,IAAI,CAACN,IAAI,CAACQ,GAAG,CAAC,IAAI,CAACN,OAAO,GAAC,WAAW,GAACI,IAAI,CAAC;EACrD;EAGAO,cAAcA,CAACC,EAAM,EAACR,IAAQ;IAC5B,OAAO,IAAI,CAACN,IAAI,CAACe,GAAG,CAAC,IAAI,CAACb,OAAO,GAAC,WAAW,GAACY,EAAE,EAACR,IAAI,CAAC;EACxD;;SAlCWR,oBAAoB;;mBAApBA,MAAoB,EAAAkB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;AAAA;;SAApBrB,MAAoB;EAAAsB,OAAA,EAApBtB,MAAoB,CAAAuB,IAAA;EAAAC,UAAA,EAFnB;AAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}